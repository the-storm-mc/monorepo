VERSION 0.7
PROJECT sjerred/monorepo
FROM ubuntu:jammy
WORKDIR /workspace

gomplate:
  FROM golang:1.20
  WORKDIR /workspace
  RUN go install github.com/hairyhenderson/gomplate/v3/cmd/gomplate@v3.11.5

render.compose:
  FROM +gomplate
  COPY compose.infra.yml.tmpl .
  RUN --secret=BORG_PASSPHRASE=borg_passphrase --secret=DATADOG_API_KEY=datadog_api_key --secret=AWS_ACCESS_KEY_ID=aws_access_key_id --secret=AWS_SECRET_ACCESS_KEY=aws_secret_access_key gomplate -f compose.infra.yml.tmpl -o compose.infra.yml
  SAVE ARTIFACT compose.infra.yml

build:
  ARG --required stage
  IF [ $stage = "infra" ]
    COPY +render.compose/ .
    COPY config config/
    RUN --secret=BORGBASE_KEY=borgbase_key echo "$BORGBASE_KEY" | base64 -d > config/borg/key && chmod 600 config/borg/key
    RUN --secret=BORGBASE_APPEND_KEY=borgbase_key_append_only echo "$BORGBASE_APPEND_KEY" | base64 -d > config/borg/key_append_only && chmod 600 config/borg/key_append_only
  ELSE IF [ $stage = "beta" ]
    COPY compose.beta.yml .
    COPY ./survival+build/ servers/survival/$stage
    COPY ./creative+build/ servers/creative/$stage
  ELSE IF [ $stage = "prod" ]
    COPY compose.prod.yml .
    COPY ./survival+build/ servers/survival/$stage
    COPY ./creative+build/ servers/creative/$stage
  ELSE
    RUN false
  END
  SAVE ARTIFACT ./*

rsync:
  FROM alpine:3
  WORKDIR /workspace
  RUN apk add rsync openssh
  RUN mkdir -p /root/.ssh/
  COPY known_hosts /root/.ssh/known_hosts
  RUN --secret=SSH_PRIVATE_KEY=ssh_private_key echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa

down:
  FROM +rsync
  ARG --required stage
  RUN --no-cache --push ssh ubuntu@100.119.36.30 "docker compose -f compose.$stage.yml down"

sync:
  FROM +rsync
  ARG --required stage
  COPY (+build/ --stage=$stage) .
  RUN --no-cache --push rsync --progress -a --checksum * ubuntu@100.119.36.30:/home/ubuntu

pull:
  FROM +rsync
  ARG --required stage
  RUN --no-cache --push ssh ubuntu@100.119.36.30 "docker compose -f compose.$stage.yml pull && docker compose -f compose.$stage.yml build --no-cache"

up:
  FROM +rsync
  ARG --required stage
  RUN --no-cache --push ssh ubuntu@100.119.36.30 "docker compose -f compose.$stage.yml up -d"

clear-plugins:
  FROM +rsync
  ARG --required stage
  RUN --no-cache --push ssh ubuntu@100.119.36.30 "rm -fv servers/*/$stage/plugins/*.jar"

deploy:
  ARG --required stage
  WAIT
    BUILD +down --stage=$stage
  END
  IF [ $stage != "infra" ]
    WAIT
      BUILD +clear-plugins --stage=$stage
    END
  END
  WAIT
    BUILD +sync --stage=$stage
  END
  WAIT
    BUILD +pull --stage=$stage
  END
  WAIT
    BUILD +up --stage=$stage
  END
